<!-- ============ Search UI Start ============= -->
<div class="search-ui">
  <div class="search-header">
    <img src="/images/logo.png" alt="" class="logo" />
    <button class="search-close btn btn-icon bg-transparent float-right mt-2">
      <i class="i-Close-Window text-22 text-muted"></i>
    </button>
  </div>

  <input type="text"
    id="searchinput"
    placeholder="Type here"
    class="search-input"
    autofocus />

  <div class="search-title" id="aftersearch">
    <span class="text-muted">Search results</span>
  </div>
  <div id='results'></div>
</div>
<script>


function createHref(url, param, title){
    var a = document.createElement('a');  
    var link = document.createTextNode(title); 
    a.appendChild(link);  
    a.title = title;  
    a.href = url + "/" + param;  
    return a;        
}

function createTable(tableType ,objectArray, fields, fieldTitles) {
  let tbl = document.createElement('table');
  tbl.setAttribute("class","table")
  let thead = document.createElement('thead');
  let thr = document.createElement('tr');
  fieldTitles.forEach((fieldTitle) => {
    let th = document.createElement('th');
    th.appendChild(document.createTextNode(fieldTitle));
    thr.appendChild(th);
  });
  thead.appendChild(thr);
  tbl.appendChild(thead);

  var title = document.createElement("h1")        
  var urlToRedirect = '';
  switch(tableType){
      case 'block':
        urlToRedirect= '/BLOCK/'
        break;   

        case 'wallet': 
        urlToRedirect = '/explorer/wallet'
        break;
  }

  tbl.before(title)


  let tbdy = document.createElement('tbody');


    let tr = document.createElement('tr');
    fields.forEach((field) => {
      var td = document.createElement('td');
      td.appendChild(createHref(urlToRedirect,objectArray[field],objectArray[field]));
      tr.appendChild(td);
    });
    tbdy.appendChild(tr);    

  tbl.appendChild(tbdy);
  return tbl;
}


  var socket = io();

  socket.on('showsearch', function (data) { 
    const resultsNode = document.getElementById("results");
    resultsNode.textContent = '';

      if(data.blocks){
        var title = document.createElement("h1")        
        title.appendChild(document.createTextNode("Found block:"));     

        results.appendChild(title)
        results.appendChild(createTable('block',data.blocks, ['id', 'height'], ['Id', 'Height']))
      }


    if(data.wallets){
        var title = document.createElement("h1")        
        title.appendChild(document.createTextNode("Found wallet:"));     

        results.appendChild(title)
        results.appendChild(createTable('wallet',data.wallets, ['address', 'balance'], ['Address', 'Balance']))
      }


      if(data.transactions){
        var title = document.createElement("h1")        
        title.appendChild(document.createTextNode("Found transaction:"));     

        results.appendChild(title)
        results.appendChild(createTable('transaction',data.transactions, ['sender', 'recipient', 'vendorField'], ['From', 'To', 'Smartbridge']))
      }

      if(data.tokenTransactions){
        var title = document.createElement("h1")        
        title.appendChild(document.createTextNode("Found token transaction:"));     

        results.appendChild(title)
        results.appendChild(createTable('tokentransaction',data.tokenTransactions, ['sender', 'recipient', 'vendorField'], ['From', 'To', 'Token Transfer Data']))
      }


      if(data.delegates){
        var title = document.createElement("h1")        
        title.appendChild(document.createTextNode("Found delegate:"));     

        results.appendChild(title)
        results.appendChild(createTable('delegate',data.delegates, ['address', 'balance'], ['Address', 'Balance']))
      }


      if(data.tokens){
        var title = document.createElement("h1")        
        title.appendChild(document.createTextNode("Found token:"));     

        results.appendChild(title)
        results.appendChild(createTable('token',data.tokens, ['type', 'lastUpdatedBlock'], ['Type', 'Last Block']))
      }

      console.log(data) 
      });

  searchinput.oninput = function() { 
      var searchString = searchinput.value;

    socket.emit('search', searchString); 
  }
</script>
<!-- ============ Search UI End ============= -->
